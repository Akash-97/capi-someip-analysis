/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.3.v201507280808.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef MATH_SUM_sum_if_STUB_DEFAULT_HPP_
#define MATH_SUM_sum_if_STUB_DEFAULT_HPP_


#include <v1_0/math/sum/sum_ifStub.hpp>
#include <sstream>

namespace v1_0 {
namespace math {
namespace sum {

/**
 * Provides a default implementation for sum_ifStubRemoteEvent and
 * sum_ifStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class sum_ifStubDefault
    : public virtual sum_ifStub {
public:
    sum_ifStubDefault();

    sum_ifStubRemoteEvent* initStubAdapter(const std::shared_ptr<sum_ifStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);


    virtual void add2(const std::shared_ptr<CommonAPI::ClientId> _client, double _num1, double _num2, add2Reply_t _reply);



protected:
    class RemoteEventHandler: public virtual sum_ifStubRemoteEvent {
    public:
        RemoteEventHandler(sum_ifStubDefault *_defaultStub);


    private:
        sum_ifStubDefault *defaultStub_;
    };
private:
    sum_ifStubDefault::RemoteEventHandler remoteEventHandler_;


    CommonAPI::Version interfaceVersion_;
};

} // namespace sum
} // namespace math
} // namespace v1_0

#endif // MATH_SUM_sum_if_STUB_DEFAULT

/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.3.v201507280808.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1_0/math/sum/sum_ifStubDefault.hpp>
#include <assert.h>

namespace v1_0 {
namespace math {
namespace sum {

sum_ifStubDefault::sum_ifStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(sum_if::getInterfaceVersion()) {
}

const CommonAPI::Version& sum_ifStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    return interfaceVersion_;
}

sum_ifStubRemoteEvent* sum_ifStubDefault::initStubAdapter(const std::shared_ptr<sum_ifStubAdapter> &_adapter) {
    CommonAPI::Stub<sum_ifStubAdapter, sum_ifStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}


void sum_ifStubDefault::add2(const std::shared_ptr<CommonAPI::ClientId> _client, double _num1, double _num2, add2Reply_t _reply) {
    double result = 0.0;
    _reply(result);
}




sum_ifStubDefault::RemoteEventHandler::RemoteEventHandler(sum_ifStubDefault *_defaultStub)
    : 
      defaultStub_(_defaultStub) {
}

} // namespace sum
} // namespace math
} // namespace v1_0

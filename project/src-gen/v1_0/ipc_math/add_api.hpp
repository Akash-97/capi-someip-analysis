/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.3.v201507280808.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef IPC_MATH_ADD_API_HPP_
#define IPC_MATH_ADD_API_HPP_




#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Types.hpp>
#include <iostream>
#include <ctime>
#include <time.h>
#include <sys/time.h>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1_0 {
namespace ipc_math {

class add_api {
public:
    virtual ~add_api() {

      struct timeval tv;
      struct tm  tm_;
      gettimeofday(&tv,NULL);
      tm_=*localtime(&tv.tv_sec);

      std::cout << "\n" << __FILE__ << "\t" << __FUNCTION__<< '\t' << __LINE__ << '\t' << tm_.tm_hour <<":"<< tm_.tm_min << ":" << tm_.tm_sec << '.' << tv.tv_usec <<"\n";

   }

    static inline const char* getInterface();
    static inline CommonAPI::Version getInterfaceVersion();
};

const char* add_api::getInterface() {

   struct timeval tv;
   struct tm  tm_;
   gettimeofday(&tv,NULL);
   tm_=*localtime(&tv.tv_sec);


      std::cout << "\n" << __FILE__ << "\t" << __FUNCTION__<< '\t' << __LINE__ << '\t' << tm_.tm_hour <<":"<< tm_.tm_min << ":" << tm_.tm_sec << '.' << tv.tv_usec <<"\n";
    return ("ipc_math.add_api");
}

CommonAPI::Version add_api::getInterfaceVersion() {

   struct timeval tv;
   struct tm  tm_;
   gettimeofday(&tv,NULL);
   tm_=*localtime(&tv.tv_sec);

      std::cout << "\n" << __FILE__ << "\t" << __FUNCTION__<< '\t' << __LINE__ << '\t' << tm_.tm_hour <<":"<< tm_.tm_min << ":" << tm_.tm_sec << '.' << tv.tv_usec <<"\n";
    return CommonAPI::Version(1, 0);
}


} // namespace ipc_math
} // namespace v1_0

namespace CommonAPI {
}

#endif // IPC_MATH_ADD_API_HPP_
